/* eslint-disable */
export default function define(runtime, observer) {
  const main = runtime.module();
  main.variable(observer()).define(["md"], function(md){return(
md`# Circuit`
)});
  main.variable(observer()).define(["md"], function(md){return(
md`A ideia é que *main* seja uma fase, onde para gerá-la deve-se passar um<br>
mapa com as peças para encaixar e uma função de solução.<p>
Essa função de solução é avaliada dinamicamente com o correspondente<br>
da posição-n no mapa, i.e.
~~~js 
f0 = mapa.positions[0]
~~~  
a medida que o jogador posiciona as peças.`
)});
  main.variable(observer()).define(["md"], function(md){return(
md`## ::[Figma com ícones](https://www.figma.com/file/F3f1nGA58MQn45EhT1kf5E/Untitled?node-id=0%3A1)`
)});
  main.variable(observer("mapa")).define("mapa", function(){return(
Object.assign({
  "rows":2,
  "columns":4,
  "postions":[[0,0],[0,1],[0,2],[0,3],[1,0]],
  "connections":[
    [[0,0],[0,1,1]], //a conexão é entre duas posições, sendo [saida]para[entrada],
    [[0,1],[0,2,1]], //[entrada] tem um terceiro indice para a porta: 0->em cima, 1->abaixo
    [[0,2],[0,3,0]],
    [[1,0],[0,3,1]],
    //[[0,3],[1,3,1]]
  ],
  "lamp":[1,3]
  
})
)});
  
  main.variable(observer("data2")).define("data2", function () { return (() => { })});
  main.variable(observer("assets2")).define("assets2", ["AND","AND0","AND1","OR","OR0","OR1"], function(AND,AND0,AND1,OR,OR0,OR1){return(
Object.assign({
  "AND":{'image':AND, "func":'(a,b)=>(a&b)'},
  "AND0":{'image':AND0,"func":'(a,b)=>(0&b)'},
  "AND1":{'image':AND1,"func":'(a,b)=>(1&b)'},
  "OR": {'image':OR,"func":'(a,b)=>(a|b)'},
  "OR0":{'image':OR0,"func":'(a,b)=>(0|b)'},
  "OR1":{'image':OR1,"func":'(a,b)=>(1|b)'},
})
)});
  main.variable(observer("data3")).define("data3", function(){return(
['AND1','AND1','OR0','AND']
)});
  main.variable(observer("main")).define("main", ["d3","width","height","mapa","rectSize","data3","assets2","lampON","lampOff","contains","solution"], function(d3,width,height,mapa,rectSize,data3,assets2,lampON,lampOff,contains,solution)
{
  
  const svg = d3.create("svg")
    .attr("viewBox", [0, 0, width, height*3/2]);
  
  const drag = d3.drag()
    .on("start", startDragging)
    .on("drag", dragCircle)
    .on("end", endDragging);
  
  const rects = svg.selectAll("rect")
    .data(mapa.postions)
    .enter().append("rect")
      .attr("x", (d,i) => (width / mapa.columns)*d[1]+55)
      .attr("y", (d,i) => (height / mapa.rows)*d[0]+55)
      .attr("width", rectSize)
      .attr("height", rectSize)
      .attr("func","")
      .attr("rx", 6);
 
  
  const connections = svg.selectAll("polyline")
    .data(mapa.connections)
      .enter().append("polyline")
        .attr("points",function(d){
          let x1 = (width / mapa.columns)*d[0][1]+55+rectSize;
          let y1 = (height / mapa.rows)*d[0][0]+55+rectSize/2;
          let x2 = (width / mapa.columns)*d[1][1]+55
          let y2 = (height / mapa.rows)*d[1][0]+55+rectSize/3*(d[1][2]+1)
          let extray = d[0][0]==d[1][0]?0:rectSize/2;
 
             return ` ${x1},${y1} 
                      ${x1+25},${y1} 
                      ${x1+25},${y2+extray} 
                      ${x2-20},${y2+extray} 
                      ${x2-20},${y2} 
                      ${x2},${y2}`
        });
 
  
  const gates = svg.selectAll("g")
    .data(mapa.gates)
    .enter().append("g")
      .attr("transform", (d,i) => `translate(${(width / mapa.gates.length)*i},500)`)
      .attr("func",d=>assets2[d].func)
      .call(drag);
  
  const label = gates.append("g");
  
  const fo = label.selectAll('.legend-fo')
            .data(d=>[d])
            .join('foreignObject')
              .classed('legend-fo', true)
              .attr('width',234)
              .attr('height',300);
  
  const subdiv = fo.selectAll('.legend-div')
            .data(d=>[d])
            .join('xhtml:div')
            .classed('legend-div', true)
            .html(
              d=>{
               return`<center><div style="font-size:20px;margin-top:0px;">
	             	<div style="border-radius:10px;
                  width:50px;
                  height:50px;
                  display:inline-block">
                </div> 
                ${assets2[d].image}
							</div></center>`
              }).join('');
  
  let x = (width / mapa.columns)*mapa.lamp[1]
  let y = (height / mapa.rows)*mapa.lamp[0]
  const lamp = svg.append("g")
      .attr("transform", d=>`translate(${x},${y})`)

  const label2 = lamp.append("g");
  
  const fo2 = label2.selectAll('.legend-fo')
            .data([1])
            .join('foreignObject')
              .classed('legend-fo', true)
              .attr('width',234)
              .attr('height',300);
  
  let subdiv2 = fo2.selectAll('.legend-div')
            .data(d=>[1])
            .join('xhtml:div')
            .classed('legend-div', true)
            .html(
              d=>{
               return`<center><div style="font-size:20px;margin-top:0px;">
	             	<div style="border-radius:10px;
                  width:50px;
                  height:50px;
                  display:inline-block">
                </div> 
                ${evaluateLamp()?lampON:lampOff}
							</div></center>`  
              }).join('');
  
  
  //////////////
  //dragFunctions
  ////////
  
  function updateRect(target,isDropTarget,func=false) {
    target.classed("dropTarget", isDropTarget);
    if(isDropTarget & !!func){
      target.attr("func",func)
    };
  };
  
  function dragCircle(event) {
    const [x, y] = d3.pointer(event, svg.node());
    let gate = d3.select(this)
      .attr("transform", `translate(${x-150},${y-150})`);
    rects
      .each(
      function(d) { 
        let atual = d3.select(this);
        updateRect(
          atual,
          overDragTarget(atual,x, y),
        );
      });
  };
  
  function overDragTarget(target,x, y) {
    let rectBounds = target.node().getBBox();
    return contains(rectBounds, ({x:x, y:y}));
  }
  
  function startDragging(event) {
    const isDragging = true;
    d3.select(this)
      .classed("dragging", isDragging)
      .raise(); // SVG elements don't have a z-index so bring the circle to the top
    
    const [x, y] = d3.pointer(event, svg.node());
    rects
      .each(
      function(d) { 
        let atual = d3.select(this);
        updateRect(
          atual,
          overDragTarget(atual,x, y),
          'undefined'
        );
      });
  
    evaluateLamp();
    updateLamp();
  }
  
  function evaluateLamp(){ 
    let i = 0;
    let allFunc = Object.assign({})
    rects.each(function(d) { 
        let atual = d3.select(this);
        allFunc[`f${i}`]=eval(atual.attr("func"))
        i++;
    })
    
    if (mapa.solution(allFunc)) {
      return true;
    };

    return false;
  }
  
  function updateLamp(){
    subdiv2.html(
              d=>{
               return`<center><div style="font-size:20px;margin-top:0px;">
	             	<div style="border-radius:10px;
                  width:50px;
                  height:50px;
                  display:inline-block">
                </div> 
                ${evaluateLamp()?lampON:lampOff}
							</div></center>`  
              }).join('');
  }
  
  function endDragging(event) {
    //updateRect(rect,true,'(a,b)=>(a|b)');
    const isDragging = false
    const circle = d3.select(this)
      .classed("dragging", isDragging);
    
    const [x, y] = d3.pointer(event, svg.node());
    let gate = d3.select(this);
    rects
      .each(
      function(d) { 
        //console.log(d3.select(this))
        let atual = d3.select(this);
        overDragTarget(atual,x, y)&&
          gate
          .attr("transform", 
                `translate(
                  ${atual.attr('x')-55},
                  ${atual.attr('y')-97}
                )`);
        //gate.attr('x',atual.attr('x'));
        //gate.attr('y',atual.attr('y'));
        updateRect(
          atual,
          overDragTarget(atual,x, y),
          gate.attr("func")
        );
      });
  
    evaluateLamp();
    updateLamp();
  }
  
  return svg.node();
}
);
  main.variable(observer("assets")).define("assets", ["AND","AND0","AND1","OR","OR0","OR1"], function(AND,AND0,AND1,OR,OR0,OR1){return(
Object.assign({
  "AND":AND,
  "AND0":AND0,
  "AND1":AND1,
  "OR": OR,
  "OR0":OR0,
  "OR1":OR1
})
)});
  main.variable(observer("contains")).define("contains", function(){return(
function contains(rect, point) {
  return (
    point.x >= rect.x &&
    point.y >= rect.y &&
    point.x <= rect.x + rect.width &&
    point.y <= rect.y + rect.height
  );
}
)});
  main.variable(observer("X")).define("X", ["width"], function(width){return(
width / 3
)});
  main.variable(observer("Y")).define("Y", ["height"], function(height){return(
height / 2
)});
  main.variable(observer("r")).define("r", function(){return(
50
)});
  main.variable(observer("style")).define("style", ["html"], function(html){return(
html`<style>
  circle.dragging { filter: url(#shadow) }
  rect { fill: none; stroke: magenta; stroke-width: 2; }
  rect.dropTarget { stroke-width: 4; }
  line{ stroke:black; stroke-width:4}
  polyline{ fill:none; stroke:black; stroke-width:4}
</style>`
)});
  main.variable(observer()).define(["width"], function(width){return(
width
)});
main.variable(observer("solution")).define("solution", function(){return(
  function solution(allFunc){
    let f0 = allFunc.f0
    let f1 = allFunc.f1 
    let f2 = allFunc.f2 
    let f3 = allFunc.f3 
    let f4 = allFunc.f4
    if(f1 && f2 && f3 && f4){
        console.log(!!f4(f3(f2(f1(1,1),1),1),1)) //funçã meramente ilustrativa
        return !!f4(f3(f2(f1(1,1),1),1),1)
      }
  }
  )});
  main.variable(observer("height")).define("height", function(){return(
500
)});
  main.variable(observer("AND1")).define("AND1", ["width"], function(width){return(
`<svg width="${width/5}" height="${width/5}" viewBox="0 0 234 237" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M223.931 145.104V123.896C227.831 123.885 230.989 120.727 231 116.828V95.6205C230.989 91.7211 227.831 88.5628 223.931 88.5516V67.3449C227.831 67.3333 230.989 64.1754 231 60.276V39.0689C230.989 35.1695 227.831 32.0112 223.931 32H192.121C188.221 32.0112 185.063 35.1695 185.052 39.0689H163.845C163.833 35.1695 160.675 32.0112 156.776 32H33.0689C29.1695 32.0112 26.0112 35.1695 26 39.0689V60.276C26.0116 64.1754 29.1695 67.3337 33.0689 67.3449V88.552C29.1695 88.5632 26.0112 91.7215 26 95.6209V116.828C26.0116 120.727 29.1695 123.886 33.0689 123.897V145.104C29.1695 145.115 26.0112 148.273 26 152.172V173.38C26.0116 177.279 29.1695 180.437 33.0689 180.448V201.656C29.1695 201.667 26.0112 204.825 26 208.724V229.931C26.0116 233.831 29.1695 236.989 33.0689 237H64.8791C68.7785 236.988 71.9368 233.831 71.948 229.931H93.1551C93.1667 233.831 96.3246 236.989 100.224 237H223.931C227.831 236.988 230.989 233.831 231 229.931V208.724C230.989 204.825 227.831 201.666 223.931 201.655V180.448C227.831 180.436 230.989 177.279 231 173.379V152.172C230.989 148.273 227.831 145.115 223.931 145.104Z" fill="#FCCC88"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.052 35.1647 188.217 32 192.121 32Z" fill="#DC6C33"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.052 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5515H223.931C227.835 88.5515 231 91.7162 231 95.6204V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6204C93.155 91.7166 96.3201 88.5515 100.224 88.5515Z" fill="#ED634C"/>
<path d="M33.0689 88.5515H64.8791C68.7833 88.5515 71.948 91.7162 71.948 95.6204V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6204C26 91.7166 29.1647 88.5515 33.0689 88.5515Z" fill="#EC9130"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.052 35.1647 188.217 32 192.121 32Z" fill="#EC9130"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.052 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5515H223.931C227.835 88.5515 231 91.7162 231 95.6204V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6204C93.155 91.7166 96.3201 88.5515 100.224 88.5515Z" fill="#DC6C33"/>
<path d="M33.0689 88.5515H64.8791C68.7833 88.5515 71.948 91.7162 71.948 95.6204V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6204C26 91.7166 29.1647 88.5515 33.0689 88.5515Z" fill="#EC9130"/>
<g filter="url(#filter0_dd)">
<rect x="60" y="90" width="144" height="90" fill="#C4C4C4"/>
</g>
<path d="M105.789 145.094H91.4922L88.2812 154H83.6406L96.6719 119.875H100.609L113.664 154H109.047L105.789 145.094ZM92.8516 141.391H104.453L98.6406 125.43L92.8516 141.391ZM144.484 154H139.961L122.781 127.703V154H118.258V119.875H122.781L140.008 146.289V119.875H144.484V154ZM152.477 154V119.875H162.109C165.078 119.875 167.703 120.531 169.984 121.844C172.266 123.156 174.023 125.023 175.258 127.445C176.508 129.867 177.141 132.648 177.156 135.789V137.969C177.156 141.188 176.531 144.008 175.281 146.43C174.047 148.852 172.273 150.711 169.961 152.008C167.664 153.305 164.984 153.969 161.922 154H152.477ZM156.977 123.578V150.32H161.711C165.18 150.32 167.875 149.242 169.797 147.086C171.734 144.93 172.703 141.859 172.703 137.875V135.883C172.703 132.008 171.789 129 169.961 126.859C168.148 124.703 165.57 123.609 162.227 123.578H156.977Z" fill="black"/>
<path d="M16 170H60" stroke="black" stroke-width="5"/>
<path d="M18 0V111H60" stroke="#ED634C" stroke-width="5"/>
<line x1="204" y1="139" x2="234" y2="139" stroke="black" stroke-width="5"/>
<path d="M8.80469 22H6.625V7.55078L2.25391 9.15625V7.1875L8.46484 4.85547H8.80469V22Z" fill="#ED634C"/>
<defs>
<filter id="filter0_dd" x="56" y="90" width="152" height="98" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="effect1_dropShadow" result="effect2_dropShadow"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow" result="shape"/>
</filter>
</defs>
</svg>
 `
)});
  main.variable(observer("AND0")).define("AND0", ["width"], function(width){return(
`<svg width="${width/5}" height="${width/5}" viewBox="0 0 234 237" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M223.931 145.104V123.896C227.831 123.885 230.989 120.727 231 116.828V95.6205C230.989 91.7211 227.831 88.5628 223.931 88.5516V67.3449C227.831 67.3333 230.989 64.1754 231 60.276V39.0689C230.989 35.1695 227.831 32.0112 223.931 32H192.121C188.221 32.0112 185.063 35.1695 185.052 39.0689H163.845C163.833 35.1695 160.675 32.0112 156.776 32H33.0689C29.1695 32.0112 26.0112 35.1695 26 39.0689V60.276C26.0116 64.1754 29.1695 67.3337 33.0689 67.3449V88.552C29.1695 88.5632 26.0112 91.7215 26 95.6209V116.828C26.0116 120.727 29.1695 123.886 33.0689 123.897V145.104C29.1695 145.115 26.0112 148.273 26 152.172V173.38C26.0116 177.279 29.1695 180.437 33.0689 180.448V201.656C29.1695 201.667 26.0112 204.825 26 208.724V229.931C26.0116 233.831 29.1695 236.989 33.0689 237H64.8791C68.7785 236.988 71.9368 233.831 71.948 229.931H93.1551C93.1667 233.831 96.3246 236.989 100.224 237H223.931C227.831 236.988 230.989 233.831 231 229.931V208.724C230.989 204.825 227.831 201.666 223.931 201.655V180.448C227.831 180.436 230.989 177.279 231 173.379V152.172C230.989 148.273 227.831 145.115 223.931 145.104Z" fill="#FCCC88"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.051 35.1647 188.217 32 192.121 32Z" fill="#DC6C33"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.051 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5515H223.931C227.835 88.5515 231 91.7162 231 95.6204V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6204C93.155 91.7166 96.3201 88.5515 100.224 88.5515Z" fill="#ED634C"/>
<path d="M33.0689 88.5515H64.8791C68.7833 88.5515 71.948 91.7162 71.948 95.6204V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6204C26 91.7166 29.1647 88.5515 33.0689 88.5515Z" fill="#EC9130"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.051 35.1647 188.217 32 192.121 32Z" fill="#EC9130"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.051 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5515H223.931C227.835 88.5515 231 91.7162 231 95.6204V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6204C93.155 91.7166 96.3201 88.5515 100.224 88.5515Z" fill="#DC6C33"/>
<path d="M33.0689 88.5515H64.8791C68.7833 88.5515 71.948 91.7162 71.948 95.6204V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6204C26 91.7166 29.1647 88.5515 33.0689 88.5515Z" fill="#EC9130"/>
<g filter="url(#filter0_dd)">
<rect x="60" y="90" width="144" height="90" fill="#C4C4C4"/>
</g>
<path d="M105.789 145.094H91.4922L88.2812 154H83.6406L96.6719 119.875H100.609L113.664 154H109.047L105.789 145.094ZM92.8516 141.391H104.453L98.6406 125.43L92.8516 141.391ZM144.484 154H139.961L122.781 127.703V154H118.258V119.875H122.781L140.008 146.289V119.875H144.484V154ZM152.477 154V119.875H162.109C165.078 119.875 167.703 120.531 169.984 121.844C172.266 123.156 174.023 125.023 175.258 127.445C176.508 129.867 177.141 132.648 177.156 135.789V137.969C177.156 141.188 176.531 144.008 175.281 146.43C174.047 148.852 172.273 150.711 169.961 152.008C167.664 153.305 164.984 153.969 161.922 154H152.477ZM156.977 123.578V150.32H161.711C165.18 150.32 167.875 149.242 169.797 147.086C171.734 144.93 172.703 141.859 172.703 137.875V135.883C172.703 132.008 171.789 129 169.961 126.859C168.148 124.703 165.57 123.609 162.227 123.578H156.977Z" fill="black"/>
<path d="M16 170H60" stroke="black" stroke-width="5"/>
<path d="M18 0V111H60" stroke="#2496FF" stroke-width="5"/>
<line x1="204" y1="139" x2="234" y2="139" stroke="black" stroke-width="5"/>
<path d="M12.3789 14.7227C12.3789 17.2617 11.9453 19.1484 11.0781 20.3828C10.2109 21.6172 8.85547 22.2344 7.01172 22.2344C5.19141 22.2344 3.84375 21.6328 2.96875 20.4297C2.09375 19.2188 1.64062 17.4141 1.60938 15.0156V12.1211C1.60938 9.61328 2.04297 7.75 2.91016 6.53125C3.77734 5.3125 5.13672 4.70312 6.98828 4.70312C8.82422 4.70312 10.1758 5.29297 11.043 6.47266C11.9102 7.64453 12.3555 9.45703 12.3789 11.9102V14.7227ZM10.2109 11.7578C10.2109 9.92188 9.95312 8.58594 9.4375 7.75C8.92188 6.90625 8.10547 6.48438 6.98828 6.48438C5.87891 6.48438 5.07031 6.90234 4.5625 7.73828C4.05469 8.57422 3.79297 9.85938 3.77734 11.5938V15.0625C3.77734 16.9062 4.04297 18.2695 4.57422 19.1523C5.11328 20.0273 5.92578 20.4648 7.01172 20.4648C8.08203 20.4648 8.875 20.0508 9.39062 19.2227C9.91406 18.3945 10.1875 17.0898 10.2109 15.3086V11.7578Z" fill="#2496FF"/>
<defs>
<filter id="filter0_dd" x="56" y="90" width="152" height="98" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="effect1_dropShadow" result="effect2_dropShadow"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow" result="shape"/>
</filter>
</defs>
</svg>
`
)});
  main.variable(observer("AND")).define("AND", ["width"], function(width){return(
`
<svg width="${width/5}" height="${width/5}" viewBox="0 0 234 237" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M223.931 145.104V123.896C227.831 123.885 230.989 120.727 231 116.828V95.6205C230.989 91.7211 227.831 88.5628 223.931 88.5516V67.3449C227.831 67.3333 230.989 64.1754 231 60.276V39.0689C230.989 35.1695 227.831 32.0112 223.931 32H192.121C188.221 32.0112 185.063 35.1695 185.052 39.0689H163.845C163.833 35.1695 160.675 32.0112 156.776 32H33.0689C29.1695 32.0112 26.0112 35.1695 26 39.0689V60.276C26.0116 64.1754 29.1695 67.3337 33.0689 67.3449V88.552C29.1695 88.5632 26.0112 91.7215 26 95.6209V116.828C26.0116 120.727 29.1695 123.886 33.0689 123.897V145.104C29.1695 145.115 26.0112 148.273 26 152.172V173.38C26.0116 177.279 29.1695 180.437 33.0689 180.448V201.656C29.1695 201.667 26.0112 204.825 26 208.724V229.931C26.0116 233.831 29.1695 236.989 33.0689 237H64.8791C68.7785 236.988 71.9368 233.831 71.948 229.931H93.1551C93.1667 233.831 96.3246 236.989 100.224 237H223.931C227.831 236.988 230.989 233.831 231 229.931V208.724C230.989 204.825 227.831 201.666 223.931 201.655V180.448C227.831 180.436 230.989 177.279 231 173.379V152.172C230.989 148.273 227.831 145.115 223.931 145.104Z" fill="#FCCC88"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.051 35.1647 188.217 32 192.121 32Z" fill="#DC6C33"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.051 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5515H223.931C227.835 88.5515 231 91.7162 231 95.6204V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6204C93.155 91.7166 96.3201 88.5515 100.224 88.5515Z" fill="#ED634C"/>
<path d="M33.0689 88.5515H64.8791C68.7833 88.5515 71.948 91.7162 71.948 95.6204V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6204C26 91.7166 29.1647 88.5515 33.0689 88.5515Z" fill="#EC9130"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.051 35.1647 188.217 32 192.121 32Z" fill="#EC9130"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.051 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5515H223.931C227.835 88.5515 231 91.7162 231 95.6204V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6204C93.155 91.7166 96.3201 88.5515 100.224 88.5515Z" fill="#DC6C33"/>
<path d="M33.0689 88.5515H64.8791C68.7833 88.5515 71.948 91.7162 71.948 95.6204V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6204C26 91.7166 29.1647 88.5515 33.0689 88.5515Z" fill="#EC9130"/>
<g filter="url(#filter0_dd)">
<rect x="60" y="90" width="144" height="90" fill="#C4C4C4"/>
</g>
<path d="M105.789 145.094H91.4922L88.2812 154H83.6406L96.6719 119.875H100.609L113.664 154H109.047L105.789 145.094ZM92.8516 141.391H104.453L98.6406 125.43L92.8516 141.391ZM144.484 154H139.961L122.781 127.703V154H118.258V119.875H122.781L140.008 146.289V119.875H144.484V154ZM152.477 154V119.875H162.109C165.078 119.875 167.703 120.531 169.984 121.844C172.266 123.156 174.023 125.023 175.258 127.445C176.508 129.867 177.141 132.648 177.156 135.789V137.969C177.156 141.188 176.531 144.008 175.281 146.43C174.047 148.852 172.273 150.711 169.961 152.008C167.664 153.305 164.984 153.969 161.922 154H152.477ZM156.977 123.578V150.32H161.711C165.18 150.32 167.875 149.242 169.797 147.086C171.734 144.93 172.703 141.859 172.703 137.875V135.883C172.703 132.008 171.789 129 169.961 126.859C168.148 124.703 165.57 123.609 162.227 123.578H156.977Z" fill="black"/>
<path d="M16 170H60" stroke="black" stroke-width="5"/>
<path d="M18 111H60" stroke="black" stroke-width="5"/>
<line x1="204" y1="139" x2="234" y2="139" stroke="black" stroke-width="5"/>
<defs>
<filter id="filter0_dd" x="56" y="90" width="152" height="98" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="effect1_dropShadow" result="effect2_dropShadow"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow" result="shape"/>
</filter>
</defs>
</svg>
`
)});
  main.variable(observer("OR1")).define("OR1", ["width"], function(width){return(
` <svg width="${width/5}" height="${width/5}" viewBox="0 0 234 237" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M223.931 145.104V123.896C227.831 123.885 230.989 120.727 231 116.828V95.6205C230.989 91.7211 227.831 88.5628 223.931 88.5516V67.3449C227.831 67.3333 230.989 64.1754 231 60.276V39.0689C230.989 35.1695 227.831 32.0112 223.931 32H192.121C188.221 32.0112 185.063 35.1695 185.052 39.0689H163.845C163.833 35.1695 160.675 32.0112 156.776 32H33.0689C29.1695 32.0112 26.0112 35.1695 26 39.0689V60.276C26.0116 64.1754 29.1695 67.3337 33.0689 67.3449V88.552C29.1695 88.5632 26.0112 91.7215 26 95.6209V116.828C26.0116 120.727 29.1695 123.886 33.0689 123.897V145.104C29.1695 145.115 26.0112 148.273 26 152.172V173.38C26.0116 177.279 29.1695 180.437 33.0689 180.448V201.656C29.1695 201.667 26.0112 204.825 26 208.724V229.931C26.0116 233.831 29.1695 236.989 33.0689 237H64.8791C68.7785 236.988 71.9368 233.831 71.948 229.931H93.1551C93.1667 233.831 96.3246 236.989 100.224 237H223.931C227.831 236.988 230.989 233.831 231 229.931V208.724C230.989 204.825 227.831 201.666 223.931 201.655V180.448C227.831 180.436 230.989 177.279 231 173.379V152.172C230.989 148.273 227.831 145.115 223.931 145.104Z" fill="#FCCC88"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.052 35.1647 188.217 32 192.121 32Z" fill="#DC6C33"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.052 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5516H223.931C227.835 88.5516 231 91.7162 231 95.6205V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6205C93.155 91.7166 96.3201 88.5516 100.224 88.5516Z" fill="#ED634C"/>
<path d="M33.0689 88.5516H64.8791C68.7833 88.5516 71.948 91.7162 71.948 95.6205V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6205C26 91.7166 29.1647 88.5516 33.0689 88.5516Z" fill="#EC9130"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.052 35.1647 188.217 32 192.121 32Z" fill="#EC9130"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.052 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5516H223.931C227.835 88.5516 231 91.7162 231 95.6205V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6205C93.155 91.7166 96.3201 88.5516 100.224 88.5516Z" fill="#DC6C33"/>
<path d="M33.0689 88.5516H64.8791C68.7833 88.5516 71.948 91.7162 71.948 95.6205V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6205C26 91.7166 29.1647 88.5516 33.0689 88.5516Z" fill="#EC9130"/>
<g filter="url(#filter0_dd)">
<rect x="60" y="90" width="144" height="90" fill="#C4C4C4"/>
</g>
<path d="M130.422 139.039C130.422 142.383 129.859 145.305 128.734 147.805C127.609 150.289 126.016 152.188 123.953 153.5C121.891 154.812 119.484 155.469 116.734 155.469C114.047 155.469 111.664 154.812 109.586 153.5C107.508 152.172 105.891 150.289 104.734 147.852C103.594 145.398 103.008 142.562 102.977 139.344V136.883C102.977 133.602 103.547 130.703 104.688 128.188C105.828 125.672 107.438 123.75 109.516 122.422C111.609 121.078 114 120.406 116.688 120.406C119.422 120.406 121.828 121.07 123.906 122.398C126 123.711 127.609 125.625 128.734 128.141C129.859 130.641 130.422 133.555 130.422 136.883V139.039ZM125.945 136.836C125.945 132.789 125.133 129.688 123.508 127.531C121.883 125.359 119.609 124.273 116.688 124.273C113.844 124.273 111.602 125.359 109.961 127.531C108.336 129.688 107.5 132.688 107.453 136.531V139.039C107.453 142.961 108.273 146.047 109.914 148.297C111.57 150.531 113.844 151.648 116.734 151.648C119.641 151.648 121.891 150.594 123.484 148.484C125.078 146.359 125.898 143.32 125.945 139.367V136.836ZM149.688 141.195H141.672V155H137.148V120.875H148.445C152.289 120.875 155.242 121.75 157.305 123.5C159.383 125.25 160.422 127.797 160.422 131.141C160.422 133.266 159.844 135.117 158.688 136.695C157.547 138.273 155.953 139.453 153.906 140.234L161.922 154.719V155H157.094L149.688 141.195ZM141.672 137.516H148.586C150.82 137.516 152.594 136.938 153.906 135.781C155.234 134.625 155.898 133.078 155.898 131.141C155.898 129.031 155.266 127.414 154 126.289C152.75 125.164 150.938 124.594 148.562 124.578H141.672V137.516Z" fill="black"/>
<path d="M16 170H60" stroke="black" stroke-width="5"/>
<path d="M18 0V111H60" stroke="#ED634C" stroke-width="5"/>
<line x1="204" y1="139" x2="234" y2="139" stroke="black" stroke-width="5"/>
<path d="M8.80469 22H6.625V7.55078L2.25391 9.15625V7.1875L8.46484 4.85547H8.80469V22Z" fill="#ED634C"/>
<defs>
<filter id="filter0_dd" x="56" y="90" width="152" height="98" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="effect1_dropShadow" result="effect2_dropShadow"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow" result="shape"/>
</filter>
</defs>
</svg>
`
)});
  main.variable(observer("OR0")).define("OR0", ["width"], function(width){return(
`<svg width="${width/5}" height="${width/5}" viewBox="0 0 234 237" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M223.931 145.104V123.896C227.831 123.885 230.989 120.727 231 116.828V95.6205C230.989 91.7211 227.831 88.5628 223.931 88.5516V67.3449C227.831 67.3333 230.989 64.1754 231 60.276V39.0689C230.989 35.1695 227.831 32.0112 223.931 32H192.121C188.221 32.0112 185.063 35.1695 185.052 39.0689H163.845C163.833 35.1695 160.675 32.0112 156.776 32H33.0689C29.1695 32.0112 26.0112 35.1695 26 39.0689V60.276C26.0116 64.1754 29.1695 67.3337 33.0689 67.3449V88.552C29.1695 88.5632 26.0112 91.7215 26 95.6209V116.828C26.0116 120.727 29.1695 123.886 33.0689 123.897V145.104C29.1695 145.115 26.0112 148.273 26 152.172V173.38C26.0116 177.279 29.1695 180.437 33.0689 180.448V201.656C29.1695 201.667 26.0112 204.825 26 208.724V229.931C26.0116 233.831 29.1695 236.989 33.0689 237H64.8791C68.7785 236.988 71.9368 233.831 71.948 229.931H93.1551C93.1667 233.831 96.3246 236.989 100.224 237H223.931C227.831 236.988 230.989 233.831 231 229.931V208.724C230.989 204.825 227.831 201.666 223.931 201.655V180.448C227.831 180.436 230.989 177.279 231 173.379V152.172C230.989 148.273 227.831 145.115 223.931 145.104Z" fill="#FCCC88"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.051 35.1647 188.217 32 192.121 32Z" fill="#DC6C33"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.051 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5516H223.931C227.835 88.5516 231 91.7162 231 95.6205V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6205C93.155 91.7166 96.3201 88.5516 100.224 88.5516Z" fill="#ED634C"/>
<path d="M33.0689 88.5516H64.8791C68.7833 88.5516 71.948 91.7162 71.948 95.6205V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6205C26 91.7166 29.1647 88.5516 33.0689 88.5516Z" fill="#EC9130"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.051 35.1647 188.217 32 192.121 32Z" fill="#EC9130"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.051 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5516H223.931C227.835 88.5516 231 91.7162 231 95.6205V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6205C93.155 91.7166 96.3201 88.5516 100.224 88.5516Z" fill="#DC6C33"/>
<path d="M33.0689 88.5516H64.8791C68.7833 88.5516 71.948 91.7162 71.948 95.6205V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6205C26 91.7166 29.1647 88.5516 33.0689 88.5516Z" fill="#EC9130"/>
<g filter="url(#filter0_dd)">
<rect x="60" y="90" width="144" height="90" fill="#C4C4C4"/>
</g>
<path d="M130.422 139.039C130.422 142.383 129.859 145.305 128.734 147.805C127.609 150.289 126.016 152.188 123.953 153.5C121.891 154.812 119.484 155.469 116.734 155.469C114.047 155.469 111.664 154.812 109.586 153.5C107.508 152.172 105.891 150.289 104.734 147.852C103.594 145.398 103.008 142.562 102.977 139.344V136.883C102.977 133.602 103.547 130.703 104.688 128.188C105.828 125.672 107.438 123.75 109.516 122.422C111.609 121.078 114 120.406 116.688 120.406C119.422 120.406 121.828 121.07 123.906 122.398C126 123.711 127.609 125.625 128.734 128.141C129.859 130.641 130.422 133.555 130.422 136.883V139.039ZM125.945 136.836C125.945 132.789 125.133 129.688 123.508 127.531C121.883 125.359 119.609 124.273 116.688 124.273C113.844 124.273 111.602 125.359 109.961 127.531C108.336 129.688 107.5 132.688 107.453 136.531V139.039C107.453 142.961 108.273 146.047 109.914 148.297C111.57 150.531 113.844 151.648 116.734 151.648C119.641 151.648 121.891 150.594 123.484 148.484C125.078 146.359 125.898 143.32 125.945 139.367V136.836ZM149.688 141.195H141.672V155H137.148V120.875H148.445C152.289 120.875 155.242 121.75 157.305 123.5C159.383 125.25 160.422 127.797 160.422 131.141C160.422 133.266 159.844 135.117 158.688 136.695C157.547 138.273 155.953 139.453 153.906 140.234L161.922 154.719V155H157.094L149.688 141.195ZM141.672 137.516H148.586C150.82 137.516 152.594 136.938 153.906 135.781C155.234 134.625 155.898 133.078 155.898 131.141C155.898 129.031 155.266 127.414 154 126.289C152.75 125.164 150.938 124.594 148.562 124.578H141.672V137.516Z" fill="black"/>
<path d="M16 170H60" stroke="black" stroke-width="5"/>
<path d="M18 0V111H60" stroke="#2496FF" stroke-width="5"/>
<line x1="204" y1="139" x2="234" y2="139" stroke="black" stroke-width="5"/>
<path d="M12.3789 14.7227C12.3789 17.2617 11.9453 19.1484 11.0781 20.3828C10.2109 21.6172 8.85547 22.2344 7.01172 22.2344C5.19141 22.2344 3.84375 21.6328 2.96875 20.4297C2.09375 19.2188 1.64062 17.4141 1.60938 15.0156V12.1211C1.60938 9.61328 2.04297 7.75 2.91016 6.53125C3.77734 5.3125 5.13672 4.70312 6.98828 4.70312C8.82422 4.70312 10.1758 5.29297 11.043 6.47266C11.9102 7.64453 12.3555 9.45703 12.3789 11.9102V14.7227ZM10.2109 11.7578C10.2109 9.92188 9.95312 8.58594 9.4375 7.75C8.92188 6.90625 8.10547 6.48438 6.98828 6.48438C5.87891 6.48438 5.07031 6.90234 4.5625 7.73828C4.05469 8.57422 3.79297 9.85938 3.77734 11.5938V15.0625C3.77734 16.9062 4.04297 18.2695 4.57422 19.1523C5.11328 20.0273 5.92578 20.4648 7.01172 20.4648C8.08203 20.4648 8.875 20.0508 9.39062 19.2227C9.91406 18.3945 10.1875 17.0898 10.2109 15.3086V11.7578Z" fill="#2496FF"/>
<defs>
<filter id="filter0_dd" x="56" y="90" width="152" height="98" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="effect1_dropShadow" result="effect2_dropShadow"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow" result="shape"/>
</filter>
</defs>
</svg>
`
)});
  main.variable(observer("OR")).define("OR", ["width"], function(width){return(
`<svg width="${width/5}" height="${width/5}" viewBox="0 0 234 237" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M223.931 145.104V123.896C227.831 123.885 230.989 120.727 231 116.828V95.6205C230.989 91.7211 227.831 88.5628 223.931 88.5516V67.3449C227.831 67.3333 230.989 64.1754 231 60.276V39.0689C230.989 35.1695 227.831 32.0112 223.931 32H192.121C188.221 32.0112 185.063 35.1695 185.052 39.0689H163.845C163.833 35.1695 160.675 32.0112 156.776 32H33.0689C29.1695 32.0112 26.0112 35.1695 26 39.0689V60.276C26.0116 64.1754 29.1695 67.3337 33.0689 67.3449V88.552C29.1695 88.5632 26.0112 91.7215 26 95.6209V116.828C26.0116 120.727 29.1695 123.886 33.0689 123.897V145.104C29.1695 145.115 26.0112 148.273 26 152.172V173.38C26.0116 177.279 29.1695 180.437 33.0689 180.448V201.656C29.1695 201.667 26.0112 204.825 26 208.724V229.931C26.0116 233.831 29.1695 236.989 33.0689 237H64.8791C68.7785 236.988 71.9368 233.831 71.948 229.931H93.1551C93.1667 233.831 96.3246 236.989 100.224 237H223.931C227.831 236.988 230.989 233.831 231 229.931V208.724C230.989 204.825 227.831 201.666 223.931 201.655V180.448C227.831 180.436 230.989 177.279 231 173.379V152.172C230.989 148.273 227.831 145.115 223.931 145.104Z" fill="#FCCC88"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.051 35.1647 188.217 32 192.121 32Z" fill="#DC6C33"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.051 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5516H223.931C227.835 88.5516 231 91.7162 231 95.6205V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6205C93.155 91.7166 96.3201 88.5516 100.224 88.5516Z" fill="#ED634C"/>
<path d="M33.0689 88.5516H64.8791C68.7833 88.5516 71.948 91.7162 71.948 95.6205V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6205C26 91.7166 29.1647 88.5516 33.0689 88.5516Z" fill="#EC9130"/>
<path d="M33.0689 32H156.776C160.68 32 163.845 35.1647 163.845 39.0689V60.276C163.845 64.1802 160.68 67.3449 156.776 67.3449H33.0689C29.1647 67.3449 26 64.1798 26 60.276V39.0689C26 35.1647 29.1647 32 33.0689 32Z" fill="#CD4F38"/>
<path d="M192.121 32H223.931C227.835 32 231 35.1647 231 39.0689V60.276C231 64.1802 227.835 67.3449 223.931 67.3449H192.121C188.217 67.3449 185.052 64.1802 185.052 60.276V39.0689C185.051 35.1647 188.217 32 192.121 32Z" fill="#EC9130"/>
<path d="M100.224 201.655H223.931C227.835 201.655 231 204.82 231 208.724V229.931C231 233.835 227.835 237 223.931 237H100.224C96.3197 237 93.155 233.835 93.155 229.931V208.724C93.155 204.82 96.3201 201.655 100.224 201.655Z" fill="#CD4F38"/>
<path d="M33.0689 201.655H64.8791C68.7833 201.655 71.948 204.82 71.948 208.724V229.931C71.948 233.835 68.7833 237 64.8791 237H33.0689C29.1647 237 26 233.835 26 229.931V208.724C26 204.82 29.1647 201.655 33.0689 201.655Z" fill="#DC6C33"/>
<path d="M33.0689 145.104H156.776C160.68 145.104 163.845 148.269 163.845 152.172V173.379C163.845 177.284 160.68 180.448 156.776 180.448H33.0689C29.1647 180.448 26 177.283 26 173.379V152.172C26 148.268 29.1647 145.104 33.0689 145.104Z" fill="#DC6C33"/>
<path d="M192.121 145.104H223.931C227.835 145.104 231 148.269 231 152.172V173.379C231 177.284 227.835 180.448 223.931 180.448H192.121C188.217 180.448 185.052 177.284 185.052 173.379V152.172C185.051 148.268 188.217 145.104 192.121 145.104Z" fill="#CD4F38"/>
<path d="M100.224 88.5516H223.931C227.835 88.5516 231 91.7162 231 95.6205V116.828C231 120.732 227.835 123.896 223.931 123.896H100.224C96.3197 123.896 93.155 120.732 93.155 116.828V95.6205C93.155 91.7166 96.3201 88.5516 100.224 88.5516Z" fill="#DC6C33"/>
<path d="M33.0689 88.5516H64.8791C68.7833 88.5516 71.948 91.7162 71.948 95.6205V116.828C71.948 120.732 68.7833 123.896 64.8791 123.896H33.0689C29.1647 123.896 26 120.732 26 116.828V95.6205C26 91.7166 29.1647 88.5516 33.0689 88.5516Z" fill="#EC9130"/>
<g filter="url(#filter0_dd)">
<rect x="60" y="90" width="144" height="90" fill="#C4C4C4"/>
</g>
<path d="M130.422 139.039C130.422 142.383 129.859 145.305 128.734 147.805C127.609 150.289 126.016 152.188 123.953 153.5C121.891 154.812 119.484 155.469 116.734 155.469C114.047 155.469 111.664 154.812 109.586 153.5C107.508 152.172 105.891 150.289 104.734 147.852C103.594 145.398 103.008 142.562 102.977 139.344V136.883C102.977 133.602 103.547 130.703 104.688 128.188C105.828 125.672 107.438 123.75 109.516 122.422C111.609 121.078 114 120.406 116.688 120.406C119.422 120.406 121.828 121.07 123.906 122.398C126 123.711 127.609 125.625 128.734 128.141C129.859 130.641 130.422 133.555 130.422 136.883V139.039ZM125.945 136.836C125.945 132.789 125.133 129.688 123.508 127.531C121.883 125.359 119.609 124.273 116.688 124.273C113.844 124.273 111.602 125.359 109.961 127.531C108.336 129.688 107.5 132.688 107.453 136.531V139.039C107.453 142.961 108.273 146.047 109.914 148.297C111.57 150.531 113.844 151.648 116.734 151.648C119.641 151.648 121.891 150.594 123.484 148.484C125.078 146.359 125.898 143.32 125.945 139.367V136.836ZM149.688 141.195H141.672V155H137.148V120.875H148.445C152.289 120.875 155.242 121.75 157.305 123.5C159.383 125.25 160.422 127.797 160.422 131.141C160.422 133.266 159.844 135.117 158.688 136.695C157.547 138.273 155.953 139.453 153.906 140.234L161.922 154.719V155H157.094L149.688 141.195ZM141.672 137.516H148.586C150.82 137.516 152.594 136.938 153.906 135.781C155.234 134.625 155.898 133.078 155.898 131.141C155.898 129.031 155.266 127.414 154 126.289C152.75 125.164 150.938 124.594 148.562 124.578H141.672V137.516Z" fill="black"/>
<path d="M16 170H60" stroke="black" stroke-width="5"/>
<path d="M18 111H60" stroke="black" stroke-width="5"/>
<line x1="204" y1="139" x2="234" y2="139" stroke="black" stroke-width="5"/>
<defs>
<filter id="filter0_dd" x="56" y="90" width="152" height="98" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="effect1_dropShadow" result="effect2_dropShadow"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow" result="shape"/>
</filter>
</defs>
</svg>
`
)});
  main.variable(observer("lampON")).define("lampON", ["width"], function(width){return(
`<svg width="${width/5}" height="${width/5}" viewBox="0 0 317 317" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0)">
<path fill-rule="evenodd" clip-rule="evenodd" d="M159.5 262C186.838 262 209 240.957 209 215C209 211.922 208.688 208.913 208.093 206H110.907C110.312 208.913 110 211.922 110 215C110 240.957 132.162 262 159.5 262Z" fill="#FFC500"/>
<path d="M243.6 126.8C228 110.4 207.2 98.8 184 94V79.6C184 76.4 182.8 73.2 180.4 71.2C178 69.2 175.2 67.6 172 67.6H165.6L165.2 6C165.2 2.4 162.4 0 159.2 0C155.6 0 153.2 2.8 153.2 6L153.6 67.6H147.2C144 67.6 140.8 68.8 138.8 71.2C136.8 73.6 135.2 76.4 135.2 79.6V93.6C110.8 98.8 89.6 110.4 73.2 126.8C51.2 148.8 38 178.8 38 212.4C38 216 40.8 218.4 44 218.4H108C109.6 230 114.4 240.4 122.4 248.4C131.6 257.6 144.4 263.2 158.4 263.2C172.4 263.2 185.2 257.6 194.4 248.4C202.4 240.4 207.2 230 208.8 218.4H272.8C276.4 218.4 278.8 215.6 278.8 212.4C278.8 179.2 265.2 148.8 243.6 126.8ZM146.8 80H171.6V92C171.2 92 171.2 92 170.8 92C170 92 169.6 92 168.8 92C165.6 91.6 162 91.6 158.8 91.6C155.6 91.2 152.4 91.6 149.2 91.6C148.4 91.6 147.6 91.6 146.8 92V80ZM186 239.6C178.8 246.8 169.2 250.8 158.8 250.8C148 250.8 138.4 246.4 131.6 239.6C126 234 122 226.8 120.8 218.4H158.8H197.2C195.6 226.4 192 234 186 239.6ZM203.6 206H158.8H114H50.4C52 178.4 63.6 153.6 82 135.6C98.8 118.8 120.8 107.6 145.6 104.8C146.4 104.8 147.6 104.4 148.4 104.4C151.6 104 155.2 104 158.4 104C162 104 165.2 104 168.8 104.4C169.6 104.4 170.8 104.8 171.6 104.8C196.4 107.6 218.4 118.8 235.2 135.6C253.6 154 265.2 178.4 266.8 206H203.6Z" fill="black"/>
<path d="M158.8 271.6C155.2 271.6 152.8 274.4 152.8 277.6V310.8C152.8 314.4 155.6 316.8 158.8 316.8C162.4 316.8 164.8 314 164.8 310.8V277.6C164.8 274 162.4 271.6 158.8 271.6Z" fill="black"/>
<path d="M213.6 294.4L196.8 265.6C195.2 262.8 191.2 261.6 188.4 263.2C185.6 264.8 184.4 268.8 186 271.6L202.8 300.4C204.4 303.2 208.4 304.4 211.2 302.8C214 301.2 215.2 297.2 213.6 294.4Z" fill="black"/>
<path d="M247.2 256.4L218.4 239.6C215.6 238 211.6 238.8 210 242C208.4 244.8 209.2 248.8 212.4 250.4L241.2 267.2C244 268.8 248 268 249.6 264.8C251.2 262 250.4 258 247.2 256.4Z" fill="black"/>
<path d="M107.6 242C106 239.2 102 238 99.2 239.6L70.4 256.4C67.6 258 66.4 262 68 264.8C69.6 267.6 73.6 268.8 76.4 267.2L105.2 250.4C108 248.4 109.2 244.8 107.6 242Z" fill="black"/>
<path d="M129.2 263.2C126.4 261.6 122.4 262.8 120.8 265.6L104 294.4C102.4 297.2 103.2 301.2 106.4 302.8C109.2 304.4 113.2 303.6 114.8 300.4L131.6 271.6C133.2 268.8 132.4 264.8 129.2 263.2Z" fill="black"/>
</g>
<defs>
<clipPath id="clip0">
<rect width="316.8" height="316.8" fill="white"/>
</clipPath>
</defs>
</svg>
`
)});
  main.variable(observer("lampOff")).define("lampOff", ["width"], function(width){return(
`<svg width="${width/5}" height="${width/5}" viewBox="0 0 317 317" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M243.6 126.8C228 110.4 207.2 98.8 184 94V79.6C184 76.4 182.8 73.2 180.4 71.2C178 69.2 175.2 67.6 172 67.6H165.6L165.2 6C165.2 2.4 162.4 0 159.2 0C155.6 0 153.2 2.8 153.2 6L153.6 67.6H147.2C144 67.6 140.8 68.8 138.8 71.2C136.8 73.6 135.2 76.4 135.2 79.6V93.6C110.8 98.8 89.6 110.4 73.2 126.8C51.2 148.8 38 178.8 38 212.4C38 216 40.8 218.4 44 218.4H108C109.6 230 114.4 240.4 122.4 248.4C131.6 257.6 144.4 263.2 158.4 263.2C172.4 263.2 185.2 257.6 194.4 248.4C202.4 240.4 207.2 230 208.8 218.4H272.8C276.4 218.4 278.8 215.6 278.8 212.4C278.8 179.2 265.2 148.8 243.6 126.8ZM146.8 80H171.6V92C171.2 92 171.2 92 170.8 92C170 92 169.6 92 168.8 92C165.6 91.6 162 91.6 158.8 91.6C155.6 91.2 152.4 91.6 149.2 91.6C148.4 91.6 147.6 91.6 146.8 92V80ZM186 239.6C178.8 246.8 169.2 250.8 158.8 250.8C148 250.8 138.4 246.4 131.6 239.6C126 234 122 226.8 120.8 218.4H158.8H197.2C195.6 226.4 192 234 186 239.6ZM203.6 206H158.8H114H50.4C52 178.4 63.6 153.6 82 135.6C98.8 118.8 120.8 107.6 145.6 104.8C146.4 104.8 147.6 104.4 148.4 104.4C151.6 104 155.2 104 158.4 104C162 104 165.2 104 168.8 104.4C169.6 104.4 170.8 104.8 171.6 104.8C196.4 107.6 218.4 118.8 235.2 135.6C253.6 154 265.2 178.4 266.8 206H203.6Z" fill="black"/>
</svg>
 `
)});
  main.variable(observer("rectSize")).define("rectSize", function(){return(
150
)});
  main.variable(observer()).define(["md"], function(md){return(
md`# Imports`
)});
  main.variable(observer("d3")).define("d3", ["require"], function(require){return(
require("d3@6")
)});
  return main;
}
